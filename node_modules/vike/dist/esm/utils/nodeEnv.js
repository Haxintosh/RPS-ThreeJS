export { getNodeEnv };
export { setNodeEnvToProduction };
export { isNodeEnvDev };
export { getNodeEnvDesc };
export { assertNodeEnvIsNotDev };
import pc from '@brillout/picocolors';
import { assertIsNotBrowser } from './assertIsNotBrowser.js';
import { assertUsage } from './assert.js';
assertIsNotBrowser();
function getNodeEnv() {
    if (typeof process === 'undefined')
        return null;
    return process.env.NODE_ENV;
}
function setNodeEnvToProduction() {
    // The statement `process.env['NODE_ENV'] = 'production'` chokes webpack v4
    const proc = process;
    const { env } = proc;
    env.NODE_ENV = 'production';
}
function isNodeEnvDev() {
    const nodeEnv = getNodeEnv();
    if (!nodeEnv)
        return true;
    if (['development', 'dev'].includes(nodeEnv))
        return true;
    // That's quite aggressive, let's see if some user complains
    return false;
}
function getNodeEnvDesc() {
    const nodeEnv = getNodeEnv();
    const isDev = isNodeEnvDev();
    const nodeEnvDesc = `environment is set to be a ${(isDev ? 'development' : 'production')} environment by ${pc.cyan(`process.env.NODE_ENV === ${JSON.stringify(nodeEnv)}`)}`;
    return nodeEnvDesc;
}
function assertNodeEnvIsNotDev(operation) {
    const isDev = isNodeEnvDev();
    if (!isDev)
        return;
    const nodeEnvDesc = getNodeEnvDesc();
    assertUsage(false, `The ${nodeEnvDesc} which is forbidden upon ${operation}, see https://vike.dev/NODE_ENV`);
}
